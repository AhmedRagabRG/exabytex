import { NextRequest, NextResponse } from 'next/server'

export async function POST(request: NextRequest) {
  try {
    const { name, email, phone, service, message } = await request.json()

    // ุงูุชุญูู ูู ุงูุจูุงูุงุช ุงููุทููุจุฉ
    if (!name || !email || !message) {
      return NextResponse.json(
        { error: 'ุงูุงุณู ูุงูุจุฑูุฏ ุงูุฅููุชุฑููู ูุงูุฑุณุงูุฉ ูุทููุจุฉ' },
        { status: 400 }
      )
    }

    // ููุชุทููุฑ ููุท - ุณุชุญุชุงุฌ ูุฅุนุฏุงุฏ SMTP ุญูููู ูู ุงูุจูุฆุฉ ุงูุฅูุชุงุฌูุฉ
    console.log('๐ง ุฑุณุงูุฉ ุงุชุตุงู ุฌุฏูุฏุฉ:')
    console.log('ุงูุงุณู:', name)
    console.log('ุงูุจุฑูุฏ:', email)
    console.log('ุงููุงุชู:', phone || 'ุบูุฑ ูุญุฏุฏ')
    console.log('ุงูุฎุฏูุฉ:', getServiceName(service))
    console.log('ุงูุฑุณุงูุฉ:', message)
    console.log('ุงูุชูููุช:', new Date().toLocaleString('ar-EG'))
    console.log('-------------------')

    // ูุญุงูุงุฉ ุฅุฑุณุงู ูุงุฌุญ
    await new Promise(resolve => setTimeout(resolve, 1000))

    return NextResponse.json({
      success: true,
      message: 'ุชู ุฅุฑุณุงู ุฑุณุงูุชู ุจูุฌุงุญ! ุณูุชูุงุตู ูุนู ูุฑูุจุงู.'
    })

  } catch (error) {
    console.error('ุฎุทุฃ ูู ุฅุฑุณุงู ุฑุณุงูุฉ ุงูุงุชุตุงู:', error)
    return NextResponse.json(
      { error: 'ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ุฅุฑุณุงู ุงูุฑุณุงูุฉ. ุญุงูู ูุฑุฉ ุฃุฎุฑู.' },
      { status: 500 }
    )
  }
}

// ุฏุงูุฉ ูุณุงุนุฏุฉ ูุชุญููู ููุน ุงูุฎุฏูุฉ ุฅูู ุงุณู ุนุฑุจู
function getServiceName(service: string): string {
  const serviceNames: { [key: string]: string } = {
    'automation': 'ุงูุฃุชูุชุฉ ูุงูุชูุงูู',
    'chatbot': 'ุฑูุจูุชุงุช ุงููุญุงุฏุซุฉ', 
    'marketing': 'ุงูุชุณููู ุงูุฑููู',
    'consultation': 'ุงุณุชุดุงุฑุฉ ุนุงูุฉ'
  }
  
  return serviceNames[service] || service || 'ุบูุฑ ูุญุฏุฏ'
} 